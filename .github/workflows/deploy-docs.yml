name: Deploy Dokka Docs

on:
  release:
    types: [published]

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permissions to Gradle
        run: chmod +x gradlew

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update version in build.gradle.kts
        run: |
          sed -i "s/version = \".*\"/version = \"${{ steps.get_version.outputs.VERSION }}\"/" build.gradle.kts

      - name: Generate versioned Dokka documentation
        run: ./gradlew dokkaHtml syncDokkaVersionedDocs

      - name: Save documentation to temp directory
        run: |
          mkdir -p /tmp/dokka-docs
          cp -r docs/. /tmp/dokka-docs/ || echo "No docs generated yet, continuing anyway"

      - name: Deploy to GitHub Pages
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch origin gh-pages --depth=1 || echo "No gh-pages branch yet"
          
          # Create or checkout gh-pages branch
          if git ls-remote --heads origin gh-pages | grep -q gh-pages; then
            git checkout -B gh-pages origin/gh-pages
          else
            git checkout --orphan gh-pages
            git rm -rf .
          fi
          
          # Don't delete existing files, instead only clear non-versioned root files
          find . -maxdepth 1 -type f -delete || echo "No files to delete"
          
          # Copy the full versioned documentation structure
          cp -r /tmp/dokka-docs/. ./ || echo "No docs to copy"
          
          # Create index.html that redirects to latest version
          LATEST_VERSION=$(ls -1 | grep -E '^[0-9]+\.[0-9]+(\.[0-9]+)?(-[a-zA-Z0-9]+)?$' | sort -V | tail -n 1 || echo "")
          if [ -n "$LATEST_VERSION" ]; then
            echo "<meta http-equiv=\"refresh\" content=\"0; url='./$LATEST_VERSION/index.html'\" />" > index.html
            echo "<h1>Redirecting to latest version ($LATEST_VERSION)...</h1>" >> index.html
          fi
          
          git add .
          git commit -m "Deploy docs for version ${{ github.event.release.tag_name }}" || echo "No changes to commit"
          
          # Use --force-with-lease which is safer than plain force but will resolve the non-fast-forward issue
          git push --force-with-lease origin gh-pages
